boot {
	generate grub
	timeout 10
	default bzImage
}

display {
	gfxmode 1024x768
}

color {	
	normal cyan/blue
	highlight blue/cyan
}

default {
	scan /boot
	kernel bzImage[-v] kernel[-v] vmlinuz[-v] vmlinux[-v]
	initrd initramfs[-v]

	# root=auto will cause the parameter for the root= option to be grabbed
	# from your /etc/fstab. rootfstype= works in much the same way.

	params root=auto rootfstype=auto

	# an alternate graphics mode can be set here for kernels, otherwise the
	# default is inherited from display:
	
	# gfxmode 1024x768
}

"Funtoo Linux" {
	kernel bzImage
}

"Funtoo Linux vesafb-tng" {

	# To enable vesafb, simply enable support for VESA framebuffer in your
	# kernel. New versions of vesafb (veasfb-tng, in Gentoo) use a nice,
	# user-friendly mode specifier similar to uvesafb, as seen in the next
	# line:

	params += video=vesafb:1024x768-8,mtrr:2,ypan

	# (note: ",mtrr:2" is supported by most video cards and signficantly
	# improves terminal scrolling performance)

	kernel bzImage-vesafb
}

"Funtoo Linux uvesafb" { 

	# To enable uvesafb, you will need to emerge uvesafb, add
	# /usr/share/v86d/initramfs to your CONFIG_INITRAMFS_SOURCE for your
	# kernel, and then recompile your kernel, and copy your new kernel to
	# /boot/bzImage-uvesafb (or change the name below.)

	params += video=uvesafb:1024x768-8,mtrr:2,ypan

	# (note: ",mtrr:2" is supported by most video cards and signficantly
	# improves terminal scrolling performance)

	kernel bzImage-uvesafb
}

