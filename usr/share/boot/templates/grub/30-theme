# Theme

<?python
if config.has_item("display/gfxmode"):
	for mod in linux.grub.RequiredGRUBModules(linux.grub.BootDeviceDev()):
		print "insmod %s" % mod
	print "set root=%s" % linux.grub.BootDeviceGRUB()
	print "search --no-floppy --fs-uuid --set "+linux.grub.BootDeviceUUID()
	if config.has_item("display/font"):
		font = config.item("display/font")
	else:
		font = "/boot/grub/unifont.pf2"
	print "if loadfont %s; then" % linux.resolver.RelativePathTo(font,"/boot")
	print "	set gfxmode=%s" % config.item("display/gfxmode")
	print "	insmod gfxterm"
	print "	insmod vbe"
	print "	terminal_output gfxterm"
	background = config.itemlist("display/background")
	if len(background):
		if len(background) == 1:
			bgimg = background[0]
			bgext = background[0].rsplit(".")[-1]
		elif len(background) == 2:
			bgimg, bgext = background
		if bgext == "jpg":
			bgext = "jpeg"
		if bgext in [ "jpeg", "png", "tga" ]:
			print "	insmod %s" % bgext
			print "	background_image %s" % linux.resolver.RelativePathTo(bgimg,"/boot")
		else:
			print "# Error - background image %s (format %s) not recognized." % ( bgimg, bgext )
	print "fi"
	if config.has_item("color/normal"):
		print "set menu_color_normal=%s" % config.item("color/normal")
	if config.has_item("color/highlight"):
		print "set menu_color_highlight=%s" % config.item("color/highlight")
	print
?>
